#!/bin/bash
# Script to checkout and install branch of Neuron
# Branches have names such as "Release 7.4"
# By default, the working version is installed.

NCPU=4
version=$1
DATE=$2
PREFIX=${HOME}/nrn

## Defaults. Set version to version known to work.
if [ "x$version" == "x" ] && [ "x$DATE" == "x" ]; then
    version="trunk"
    DATE="2014-09-23"
fi

if [ "x$version" == "x" ] || [ "x$version" == "xtrunk"]; then 
    branch=trunk
    if [ "x${DATE}" == "x" ]; then
        NRNPREFIX=${PREFIX}/${branch}
    else
        NRNPREFIX=${PREFIX}/${branch}-${DATE}
    fi
else
    branch="Release ${version}"
    if [ "x${DATE}" == "x" ]; then
        NRNPREFIX=${PREFIX}/${version}
    else
        NRNPREFIX=${PREFIX}/${version}-${DATE}
    fi
fi
echo "Branch \"$branch\" will be checked out.."
echo "...and installed in ${NRNPREFIX}"

function installpkg {
    echo -n "checking for $1 ... "
    if [ -e $1 ]; then
        echo "present"
    else
        echo
        sudo apt-get install $2
    fi
}
installpkg /usr/bin/bison bison
installpkg /usr/bin/hg mercurial
installpkg /usr/bin/gcc build-essential
installpkg /usr/bin/aclocal automake
installpkg /usr/bin/libtoolize libtool
installpkg /usr/include/X11/Xlib.h libx11-dev

mkdir neuron-build
cd neuron-build
# Install neuron
if [ -d iv ] ; then
   cd iv
   hg pull
   cd ..
else
   hg clone http://www.neuron.yale.edu/hg/neuron/iv # skip this if you don't want the GUI
fi
if [ -d nrn ] ; then
   cd nrn
   hg pull
   cd ..
else 
   hg clone http://www.neuron.yale.edu/hg/neuron/nrn
fi

cd iv/
./build.sh 
./configure --prefix=$NRNPREFIX/iv
make -j ${NCPU}
make install

cd ../nrn
if [ "x${DATE}" != "x" ]; then
    hg update -d ${DATE}
else
    hg update "${branch}"
fi
./build.sh
./configure --prefix=$NRNPREFIX/nrn --with-iv=$NRNPREFIX/iv  --with-nrnpython=/usr/bin/python2.7
make -j ${NCPU}
make install

cd ..
# Python packages are installed in ${NRNPREFIX}/lib/python

echo "Branch \"$branch\" (Date: ${DATE}) has been installed in ${NRNPREFIX}"

## Test
${NRNPREFIX}/nrn/x86_64/bin/nrngui 
